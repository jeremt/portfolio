/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import {useGLTF, OrthographicCamera} from '@react-three/drei';
import type {FC} from 'react';
import type {GLTF} from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        Rectangle_3: THREE.Mesh;
        Rectangle_2: THREE.Mesh;
        Ellipse: THREE.Mesh;
        Cube: THREE.Mesh;
    };
    materials: {};
};

export const Camera: FC<JSX.IntrinsicElements['group']> = props => {
    const {nodes, materials} = useGLTF('/models/camera.gltf') as GLTFResult;
    const gold = new THREE.MeshStandardMaterial({color: '#daceaa', roughness: 0.15, metalness: 0.8});
    return (
        <group {...props} dispose={null}>
            <group scale={0.008}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Rectangle_3.geometry}
                    material={gold}
                    position={[-0.94, -8.88, -22]}
                    rotation={[Math.PI, 0, 0]}
                />
                <mesh castShadow receiveShadow geometry={nodes.Rectangle_2.geometry} material={gold} position={[48.37, 20.39, 12.13]} />
                <mesh castShadow receiveShadow geometry={nodes.Ellipse.geometry} material={gold} position={[1.5, -9.74, 26.55]} />
                <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={gold} position={[0, -8.74, -7.59]} />
            </group>
        </group>
    );
};

useGLTF.preload('/models/camera.gltf');
