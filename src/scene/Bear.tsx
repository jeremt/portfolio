/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import {GLTF} from 'three-stdlib';
import {useGLTF} from '@react-three/drei';
import type {FC} from 'react';

type GLTFResult = GLTF & {
    nodes: {
        character_bear: THREE.Mesh;
        character_bearArmLeft: THREE.Mesh;
        character_bearArmRight: THREE.Mesh;
        Cube1337: THREE.Mesh;
        Cube1337_1: THREE.Mesh;
    };
    materials: {
        ['BrownDark.036']: THREE.MeshStandardMaterial;
        ['Black.025']: THREE.MeshStandardMaterial;
    };
};

export const Bear: FC<JSX.IntrinsicElements['group']> = props => {
    const {nodes, materials} = useGLTF('/models/bear.gltf') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.character_bear.geometry}
                material={materials['BrownDark.036']}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.6}
            >
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.character_bearArmLeft.geometry}
                    material={materials['BrownDark.036']}
                    position={[0.2, 0, -0.63]}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.character_bearArmRight.geometry}
                    material={materials['BrownDark.036']}
                    position={[-0.2, 0, -0.63]}
                />
                <group position={[0, 0, -0.7]}>
                    <mesh castShadow receiveShadow geometry={nodes.Cube1337.geometry} material={materials['Black.025']} />
                    <mesh castShadow receiveShadow geometry={nodes.Cube1337_1.geometry} material={materials['BrownDark.036']} />
                </group>
            </mesh>
        </group>
    );
};

useGLTF.preload('/models/bear.gltf');
